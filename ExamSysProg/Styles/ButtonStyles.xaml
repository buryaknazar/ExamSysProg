<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">

    <!--Menu Button-->
    <Style x:Key="menuButton" TargetType="Button">
        <Setter Property="Height" Value="50"></Setter>
        <Setter Property="Margin" Value="-5,0,0,5"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="4,0,0,0"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"></Setter>
                <Setter Property="Background" Value="{StaticResource panelOverColor}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"></Setter>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Menu Button Icon-->
    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Button}}"></Setter>
        <Setter Property="Width" Value="22"></Setter>
        <Setter Property="Height" Value="22"></Setter>
        <Setter Property="Margin" Value="35,0,20,0"></Setter>
    </Style>

    <!--Menu Button Text-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"></Setter>
        <Setter Property="FontFamily" Value="Cascadia Code"></Setter>
        <Setter Property="FontWeight" Value="Medium"></Setter>
        <Setter Property="FontSize" Value="13.5"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>



    <!--Main Section Button-->
    <Style x:Key="mainSectionButton" TargetType="Button">
        <Setter Property="Height" Value="50"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="2"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,0"></Setter>
                <Setter Property="Background" Value="{StaticResource panelOverColor}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"></Setter>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Main Section Button Icon-->
    <Style x:Key="mainSectionButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Button}}"></Setter>
        <Setter Property="Width" Value="22"></Setter>
        <Setter Property="Height" Value="22"></Setter>
        <Setter Property="Margin" Value="5,0,20,0"></Setter>
    </Style>

    <!--Main Section Button Text-->
    <Style x:Key="mainSectionButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"></Setter>
        <Setter Property="FontFamily" Value="Cascadia Code"></Setter>
        <Setter Property="FontWeight" Value="Medium"></Setter>
        <Setter Property="FontSize" Value="17.5"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>



    <!--Control Button-->
    <Style x:Key="controlButton" TargetType="Button">
        <Setter Property="Width" Value="35"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelActiveColor}"></Setter>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Control Button Icon-->
    <Style x:Key="controlButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"></Setter>
        <Setter Property="Width" Value="9"></Setter>
        <Setter Property="Height" Value="9"></Setter>
    </Style>



    <!--Icon Button-->
    <Style x:Key="iconButton" TargetType="Button">
        <Setter Property="Width" Value="25"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor1}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Icon Button Icon-->
    <Style x:Key="iconButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"></Setter>
        <Setter Property="Width" Value="16"></Setter>
        <Setter Property="Height" Value="16"></Setter>
    </Style>

    <!--Grid Edit Button-->
    <Style x:Key="gridEditButton" TargetType="Button">
        <Setter Property="Background" Value="#512DA8"></Setter>
        <Setter Property="BorderBrush" Value="#4A148C"></Setter>
        <Setter Property="Foreground" Value="#ffffff"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="5" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#673AB7"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Grid Remove Button-->
    <Style x:Key="gridRemoveButton" TargetType="Button" BasedOn="{StaticResource gridEditButton}">
        <Setter Property="Background" Value="#D32F2F"></Setter>
        <Setter Property="BorderBrush" Value="#B71C1C"></Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F44336"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Grid Button Icon-->
    <Style x:Key="gridButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Width" Value="13"></Setter>
        <Setter Property="Height" Value="13"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
    </Style>


    <!--ComboBox-->
    <ControlTemplate x:Key="comboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition Width="30"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Border x:Name="Border"
                        Grid.ColumnSpan="2"
                        CornerRadius="5"
                        BorderBrush="#773DFF"
                        Background="#773DFF"
                        BorderThickness="2"
                        SnapsToDevicePixels="true">


            </Border>
            <Border Grid.Column="1">
                <Path x:Name="Arrow"
                          Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                          Fill="White"
                          Stretch="Fill"
                          Height="7"
                          Width="10"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"/>
            </Border>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#836EFB" TargetName="Border"></Setter>
                <Setter Property="Fill" Value="White" TargetName="Arrow"></Setter>
            </Trigger>

            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderBrush" Value="White" TargetName="Border"></Setter>
                <Setter Property="BorderThickness" Value="0.5, 0.5, 0.5, 3" TargetName="Border"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
                Focusable="False"
                Background="{TemplateBinding Background}">

        </Border>
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="#773DFF"/>
        <Setter Property="FontFamily" Value="Cascadia Code"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                      Template="{StaticResource comboBoxToggleButton}"
                                      Grid.Column="2"
                                      Focusable="False"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"></ToggleButton>

                        <ContentPresenter x:Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          Margin="10,0,0,0"
                                          IsEnabled="True"></ContentPresenter>

                        <Label x:Name="Watermark"
                               VerticalAlignment="{TemplateBinding VerticalAlignment}"
                               HorizontalAlignment="Left"
                               Foreground="White"
                               Visibility="Collapsed"
                               Padding="8 9 0 0"
                               Content="{TemplateBinding Tag}"
                               FontFamily="Cascadia Code"
                               FontSize="13"></Label>

                        <TextBox x:Name="PART_EditableTextBox"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Margin="10,0,0,0"
                                 Focusable="True"
                                 Visibility="Hidden"></TextBox>

                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">

                            <Grid x:Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource color2}"
                                        Background="{DynamicResource plainTextColor3}"></Border>

                                <ScrollViewer Margin="4 6 4 6"
                                              SnapsToDevicePixels="True"
                                              OverridesDefaultStyle="True"
                                              Foreground="Black"
                                              FontFamily="Cascadia Code"
                                              FontSize="13"></ScrollViewer>
                                <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Contained">

                                </StackPanel>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="Watermark"></Setter>
                        </MultiTrigger>

                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"></Setter>
                        </Trigger>

                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"></Setter>
                        </Trigger>

                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"></Setter>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0 2 0 0"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--Add Element View - Radio Buttons-->
    <Style x:Key="addElementMenuButton" TargetType="RadioButton">
        <Setter Property="Height" Value="50"></Setter>
        <Setter Property="Margin" Value="0,0,20,-5"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="0,0,0,3"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,20,0"></Setter>
                <Setter Property="Background" Value="{StaticResource panelOverColor}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"></Setter>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"></Setter>
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Margin" Value="0,0,20,0"></Setter>
                <Setter Property="Background" Value="{StaticResource panelActiveColor}"></Setter>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"></Setter>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Add Element View - Radio Buttons Text-->
    <Style x:Key="addElementMenuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"></Setter>
        <Setter Property="FontFamily" Value="Cascadia Code"></Setter>
        <Setter Property="FontWeight" Value="Medium"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <!--Add Element View - Radio Buttons Icon-->
    <Style x:Key="addElementMenuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"></Setter>
        <Setter Property="Width" Value="22"></Setter>
        <Setter Property="Height" Value="22"></Setter>
        <Setter Property="Margin" Value="0,0,20,0"></Setter>
    </Style>
    
    
    <!--List Box Item-->

    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#7E82FC"/>
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#7E82FC"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="Transparent"/>
    <ControlTemplate x:Key="ListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>